#BlueJ class context
comment0.params=end
comment0.target=RangeResource(int)
comment0.text=\n\ Create\ a\ <code>RangeResource</code>\ object,\ starting\ at\ 0\ and\ going\ up\ to\ but\ not\ including\n\ end,\ [0\ -\ end),\ that\ increments\ by\ 1.\n\ \n\ @param\ end\ when\ to\ stop\ the\ range,\ not\ included\ as\ one\ of\ the\ values\n\ @throws\ exception\ if\ the\ end\ is\ negative\n
comment1.params=start\ end
comment1.target=RangeResource(int,\ int)
comment1.text=\n\ Create\ a\ <code>RangeResource</code>\ object,\ starting\ at\ start\ and\ going\ up\ to\ but\ not\n\ including\ end,\ [start\ -\ end),\ that\ increments\ by\ 1.\n\ \n\ @param\ start\ the\ first\ value\ in\ the\ range,\ included\ as\ one\ of\ the\ values\n\ @param\ end\ when\ to\ stop\ the\ range,\ not\ included\ as\ one\ of\ the\ values\n\ @throws\ exception\ if\ the\ end\ is\ less\ than\ the\ start\n
comment2.params=start\ end\ increment
comment2.target=RangeResource(int,\ int,\ int)
comment2.text=\n\ Create\ a\ <code>RangeResource</code>\ object,\ starting\ at\ start\ and\ going\ up\ to\ but\ not\n\ including\ end,\ [start\ -\ end),\ that\ increments\ by\ the\ amount\ passed\ as\ a\ parameter.\n\ \n\ @param\ start\ the\ first\ value\ in\ the\ range,\ included\ as\ one\ of\ the\ values\n\ @param\ end\ when\ to\ stop\ the\ range,\ not\ included\ as\ one\ of\ the\ values\n\ @param\ increment\ how\ much\ to\ add\ to\ get\ the\ next\ value\ in\ the\ range's\ sequence\n\ @throws\ exception\ if\ increment\ is\ negative\ when\ the\ end\ is\ greater\ than\ the\ start\n\ @throws\ exception\ if\ increment\ is\ positive\ when\ the\ end\ is\ less\ than\ the\ start\n\ @throws\ exception\ if\ increment\ is\ 0\n
comment3.params=other
comment3.target=RangeResource(edu.duke.RangeResource)
comment3.text=\n\ Create\ an\ <code>RangeResource</code>\ object\ that\ is\ a\ copy\ of\ another\ range.\n\ \n\ @param\ other\ the\ original\ range\ being\ copied\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\n\ Return\ string\ representation\ of\ this\ range,\ with\ each\ value\ in\ the\ sequence\ separated\ by\ a\n\ comma.\n\n\ @return\ a\ <code>String</code>\ containing\ all\ the\ values\ in\ the\ range\n
comment5.params=
comment5.target=java.lang.Iterable\ sequence()
comment5.text=\n\ Allow\ access\ to\ the\ numbers\ in\ this\ range\ one\ at\ a\ time.\n\ \n\ @return\ an\ <code>Iterable</code>\ that\ will\ allow\ access\ to\ each\ number\ in\ this\ range\n
comment6.params=start\ end\ increment
comment6.target=java.util.List\ makeValues(int,\ int,\ int)
numComments=7
